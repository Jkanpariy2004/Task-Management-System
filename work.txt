Date:16/09/2024
1.Tasks Completed:
 ->Knowledge about Git and Github.
 ->Apply validation to all forms on the frontend side, and convert the API calls to use the call method.
 ->Send Mail Functionality Add on News App.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->No challenge faced today.

4.Next Steps/Plan for Tomorrow:

Date:18/09/2024
1.Tasks Completed:
 ->Create Project Task-Management-System.
 ->Add Functionality Create User with Mail Send And crud Operation In Task-Management-System.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->Mail Send To Set Url To Password Change.

4.Next Steps/Plan for Tomorrow:
 ->

Date:19/09/2024
1.Tasks Completed:
 ->Craete Company Funcationality With Crud Operation in Task Management System.
 ->Create Task Funcationality & User Task Assign Funcationality in Task Management System.
 ->Create User Login And User Dashboard Page in Task Management system.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->No challenge faced today.

4.Next Steps/Plan for Tomorrow:
 ->

Date:20/09/2024
1.Tasks Completed:
 ->User Assign Task Show In Card And Apply All Condition In User Task Details.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->Apply Condition To Show User Task Data.

4.Next Steps/Plan for Tomorrow:
 ->

Date:21/09/2024
1.Tasks Completed:
 ->Assign Task Add Attechments in Task Management System.
 ->Task Details Show Add Comment Admin & User Side.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->Send And Show Comment User & Admin Side.

4.Next Steps/Plan for Tomorrow:
 ->

Date:22/09/2024
1.Tasks Completed:
 ->Error Solve In Comment User & Admin Side In Task Management System.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->Send And Show Comment User & Admin Side.

4.Next Steps/Plan for Tomorrow:
 ->

Date:25/09/2024
1.Tasks Completed:
 ->Knowledge about CPanel.
 ->Knowledge about How To Upload Project On CPanel.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->No challenge faced today.

4.Next Steps/Plan for Tomorrow:
 ->

Date:26/09/2024
1.Tasks Completed:
 ->Error Solve In Comment User & Admin Side In Task Management System.
 ->Send Whatsapp Message Using Twilio.
 ->Send Text Message Using Twilio.
 ->Mail Send Using Markdown Method.
 ->Pdf Generate & Send In Mail.

2.Ongoing Tasks:
 ->No Ongoing Task.

3.Challenges Faced:
 ->No challenge faced today.

4.Next Steps/Plan for Tomorrow:
 ->


<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Dashboard\Login\Login;
use App\Http\Controllers\Dashboard\Index;
use App\Http\Controllers\Dashboard\Users;
use App\Http\Controllers\Dashboard\Company;
use App\Http\Controllers\Dashboard\Task;
use App\Http\Controllers\CacheClear;
use App\Http\Controllers\UserDashboard\Login\UserLogin;
use App\Http\Controllers\UserDashboard\Home;
use App\Http\Controllers\UserDashboard\Comment;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

// // // // // // // //
// User Panel Route  //
// // // // // // // //

// Login Page
Route::prefix('user')->group(function () {
    Route::get('/', [UserLogin::class, 'index']);
    Route::post('/login', [UserLogin::class, 'UserLoginCheck']);
    Route::get('/logout', [UserLogin::class, 'UserLogout']);

    // Home Page
    Route::get('/dashboard', [Home::class, 'index']);
    Route::get('/Fetch-User-Task', [Home::class, 'FetchUserTask']);
});

// // // // // // // //
// Admin Panel Route //
// // // // // // // //

Route::prefix('admin')->group(function () {
    // login Route
    Route::get('/', [Login::class, 'index']);
    Route::post('/login', [Login::class, 'LoginCheck']);
    Route::get('/logout', [Login::class, 'logout']);

    // Dashboard Route
    Route::get('/dashboard', [Index::class, 'index']);

    Route::prefix('users')->group(function () {
        Route::get('/', [Users::class, 'index'])->name('users');
        Route::get('/add', [Users::class, 'AddUsers']);
        Route::post('/submit', [Users::class, 'SubmitUser']);
        Route::get('/fetch-users', [Users::class, 'FetchUsers']);
        Route::get('/delete/{id}', [Users::class, 'UsersDelete'])->name('users.delete');
        Route::get('/edit/{id}', [Users::class, 'edit']);
        Route::post('/update/{id}', [Users::class, 'UserUpdate'])->name('users.update');
        Route::post('/send-invitation', [Users::class, 'sendInvitation']);
        Route::get('/password-creation-form', [Users::class, 'showPasswordCreationForm'])->name('password.creation.form');
        Route::post('/password-creation', [Users::class, 'store']);
        Route::post('/bulk-delete', [Users::class, 'bulkDelete'])->name('bulk.delete.user');
    });

    Route::prefix('cache')->group(function () {
        Route::get('/', [CacheClear::class, 'index'])->name('cache');
        Route::get('/cache-clear', [CacheClear::class, 'clearCache'])->name('cache.clear');
        Route::get('/route-cache-clear', [CacheClear::class, 'clearRouteCache'])->name('route.cache.clear');
        Route::get('/config-cache-clear', [CacheClear::class, 'clearConfigCache'])->name('config.cache.clear');
        Route::get('/view-cache-clear', [CacheClear::class, 'clearViewCache'])->name('view.cache.clear');
        Route::get('/compiled-cache-clear', [CacheClear::class, 'clearCompiledCache'])->name('compiled.cache.clear');
        Route::get('/optimize-cache-clear', [CacheClear::class, 'optimizeCache'])->name('optimize.cache.clear');
    });

    Route::prefix('company')->group(function () {
        Route::get('/', [Company::class, 'index'])->name('company');
        Route::get('/fetch-company', [Company::class, 'FetchCompany']);
        Route::get('/add', [Company::class, 'AddCompany']);
        Route::post('/submit', [Company::class, 'SubmitCompany'])->name('submit.company');
        Route::get('/edit/{id}', [Company::class, 'edit']);
        Route::post('/update/{id}', [Company::class, 'CompanyUpdate'])->name('company.update');
        Route::get('/delete/{id}', [Company::class, 'CompanyDelete'])->name('company.delete');
        Route::post('/bulk-delete', [Company::class, 'bulkDelete'])->name('bulk.delete.company');
    });

    Route::prefix('task')->group(function () {
        Route::get('/', [Task::class, 'index'])->name('task');
        Route::get('/fetch-task', [Task::class, 'FetchTask'])->name('fetch.task');
        Route::get('/add', [Task::class, 'AddTask'])->name('add.task');
        Route::post('/submit', [Task::class, 'SubmitTask'])->name('submit.task');
        Route::get('/delete/{id}', [Task::class, 'TaskDelete'])->name('task.delete');
        Route::post('/bulk-delete', [Task::class, 'bulkDelete'])->name('bulk.delete.task');
        Route::get('/edit/{id}', [Task::class, 'edit']);
        Route::post('/update/{id}', [Task::class, 'TaskUpdate'])->name('task.update');
        Route::post('/comments-store', [Comment::class, 'store'])->name('comments.store'); //user
        Route::post('/store-comments', [Task::class, 'store_comment'])->name('store.comments'); //admin
    });
});
